package model;
// Generated 12/04/2015 19:06:05 by Hibernate Tools 3.6.0

import dao.TipoCursoDAO;
import java.sql.SQLException;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Tipocurso generated by hbm2java
 */
@Entity
@Table(name = "tipocurso", catalog = "scp"
)
public class Tipocurso implements java.io.Serializable {

    private int codigoTipoCurso;
    private String nomeTipoCurso;
   

    public Tipocurso() {
    }

    public Tipocurso(int codigoTipoCurso) {
        this.codigoTipoCurso = codigoTipoCurso;
    }

    public Tipocurso(int codigoTipoCurso, String nomeTipoCurso) {
        this.codigoTipoCurso = codigoTipoCurso;
        this.nomeTipoCurso = nomeTipoCurso;
    }

    @Id

    @Column(name = "codigoTipoCurso", unique = true, nullable = false)
    public int getCodigoTipoCurso() {
        return this.codigoTipoCurso;
    }

    public void setCodigoTipoCurso(int codigoTipoCurso) {
        this.codigoTipoCurso = codigoTipoCurso;
    }

    @Column(name = "nomeTipoCurso", length = 45)
    public String getNomeTipoCurso() {
        return this.nomeTipoCurso;
    }

    public void setNomeTipoCurso(String nomeTipoCurso) {
        this.nomeTipoCurso = nomeTipoCurso;
    }

    public void gravar() throws SQLException, ClassNotFoundException {
        TipoCursoDAO.gravar(this);
    }

    public void editar() throws SQLException, ClassNotFoundException {
        TipoCursoDAO.editar(this);
    }

    public void excluir() throws SQLException, ClassNotFoundException {
        TipoCursoDAO.excluir(this);
    }

    public static List<Tipocurso> obterTipoCursos()
            throws ClassNotFoundException, SQLException {
        return TipoCursoDAO.obterTipoCursos();
    }

    public static Tipocurso obterTipoCurso(int codigoTipoCurso) throws ClassNotFoundException,
            SQLException {
        return TipoCursoDAO.obterTipoCurso(codigoTipoCurso);
    }

}
