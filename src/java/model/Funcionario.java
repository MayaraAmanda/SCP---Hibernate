package model;
// Generated 12/04/2015 19:06:05 by Hibernate Tools 3.6.0


import dao.FuncionarioDAO;
import java.sql.SQLException;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Funcionario generated by hbm2java
 */
@Entity
@Table(name="funcionario"
    ,catalog="scp"
)
public class Funcionario  implements java.io.Serializable {


     private int matricula;
     private Instituicao instituicao;
     private Pessoas pessoas;

    public Funcionario() {
    }

    public Funcionario(int matricula, Pessoas pessoas, Instituicao instituicao) {
        
       this.matricula = matricula;
       this.pessoas = pessoas;
       this.instituicao = instituicao;
       this.pessoas = pessoas;
    }
   
     @Id 

    
    @Column(name="matricula", unique=true, nullable=false)
    public int getMatricula() {
        return this.matricula;
    }
    
    public void setMatricula(int matricula) {
        this.matricula = matricula;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="instituicao_codigo", nullable=false)
    public Instituicao getInstituicao() {
        return this.instituicao;
    }
    
    public void setInstituicao(Instituicao instituicao) {
        this.instituicao = instituicao;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="pessoas_codigo", nullable=false)
    public Pessoas getPessoas() {
        return this.pessoas;
    }
    
    public void setPessoas(Pessoas pessoas) {
        this.pessoas = pessoas;
    }


 public void gravar() throws SQLException, ClassNotFoundException {
        FuncionarioDAO.gravar(this);
    }

    public void editar() throws SQLException, ClassNotFoundException {
        FuncionarioDAO.editar(this);
    }

    public void excluir() throws SQLException, ClassNotFoundException {
        FuncionarioDAO.excluir(this);
    }

    public static List<Funcionario> obterFuncionarios()
            throws ClassNotFoundException, SQLException {
        return FuncionarioDAO.obterFuncionarios();
    }

    public static Funcionario obterFuncionario(int matricula) throws ClassNotFoundException,
            SQLException {
        return FuncionarioDAO.obterFuncionario(matricula);
    }

    

}


