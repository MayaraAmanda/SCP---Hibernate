package model;
// Generated 08/04/2015 07:47:32 by Hibernate Tools 3.6.0
import dao.CampusDAO;
import java.sql.SQLException;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
/**
 * Campus generated by hbm2java
 */
@Entity
@Table(name="campus"
    ,catalog="scp"
)
public class Campus  implements java.io.Serializable {
     private int codigoCampus;
     private Instituicao instituicao;
     private String nomeCampus;
     
    public Campus() {
    }
	
    public Campus(int codigoCampus, String nomeCampus, Instituicao instituicao) {
        this.codigoCampus = codigoCampus;
        this.nomeCampus = nomeCampus;
        this.instituicao = instituicao;
    }
   
     @Id 
    
    @Column(name="codigoCampus", unique=true, nullable=false)
    public int getCodigoCampus() {
        return this.codigoCampus;
    }
    
    public void setCodigoCampus(int codigoCampus) {
        this.codigoCampus = codigoCampus;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="instituicao_codigo", nullable=false)
    public Instituicao getInstituicao() {
        return this.instituicao;
    }
    
    public void setInstituicao(Instituicao instituicao) {
        this.instituicao = instituicao;
    }
    
    @Column(name="nomeCampus", length=45)
    public String getNomeCampus() {
        return this.nomeCampus;
    }
    
    public void setNomeCampus(String nomeCampus) {
        this.nomeCampus = nomeCampus;
    }
    public void gravar() throws SQLException, ClassNotFoundException {
        CampusDAO.gravar(this);
    }
    public void editar() throws SQLException, ClassNotFoundException {
        CampusDAO.editar(this);
    }
    public void excluir() throws SQLException, ClassNotFoundException {
        CampusDAO.excluir(this);
    }
    public static List<Campus> obterCampi()
            throws ClassNotFoundException, SQLException {
        return CampusDAO.obterCampi();
    }
    public static Campus obterCampus(int codigo) throws ClassNotFoundException,
            SQLException {
        return CampusDAO.obterCampus(codigo);
    }
    public static List<Campus> obterCampusPorNome(String nome) throws ClassNotFoundException,
            SQLException {
        return CampusDAO.obterCampiPorNome(nome);
    }
}